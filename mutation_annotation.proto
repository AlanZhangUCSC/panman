syntax = "proto3";

package MAT;

<<<<<<< HEAD
message nuc_mut
{
    uint32 position = 1; 
    uint32 gap_position = 2;  
    bool gap_exist = 3;
    uint32 condensed = 4; 
    uint64 nucs = 5;
}

message block_mut
{
    repeated uint32 condensed_block_mut = 1;
=======
message nucMut
{
    int32 nucPosition = 1; 
    int32 nucGapPosition = 2;  
    bool  nucGapExist = 3;
    uint32 mutInfo = 4; 
}

message mutation
{
    int64 blockId = 1;
    bool  blockGapExist = 2;
    bool  blockMutExist = 3;
    bool  blockMutInfo = 4;
    repeated nucMut nucMutation = 5;
>>>>>>> c628dec607758af1150d82915d5fc604da520b67
}

message node 
{
<<<<<<< HEAD
    repeated nuc_mut nuc_mutation = 1;
    block_mut block_mutation = 2;
    repeated string annotations = 3;
=======
    repeated mutation mutations = 1;
    repeated string   annotations = 2;
>>>>>>> c628dec607758af1150d82915d5fc604da520b67
}


message block
{
<<<<<<< HEAD
    uint32 block_id = 1;
    repeated uint32 consensus_seq = 2;
    string chromosome_name = 3;
}

message gap_list
{
    repeated uint32 position = 1;
    repeated uint32 block_id = 2;
    repeated uint32 gap_length = 3;
=======
    int64            blockId = 1;
    bool             blockGapExist = 2;
    repeated uint32  consensusSeq = 3;
    string           chromosomeName = 4;
}

message gapList
{
    int64          blockId = 1;
    bool           blockGapExist = 2;
    repeated int32 nucGapLength = 3;
    repeated int32 nucPosition = 4;
}

message blockGapList
{
    repeated int32  blockPosition = 1;
    repeated int32  blockGapLength = 2;
>>>>>>> c628dec607758af1150d82915d5fc604da520b67
}

message tree 
{
<<<<<<< HEAD
    string newick = 1;
    repeated node nodes = 2;
    repeated block blocks = 3;
    gap_list gaps = 4;
=======
    string           newick = 1;
    repeated node    nodes = 2;
    repeated block   blocks = 3;
    repeated gapList gaps = 4;
    blockGapList     blockGaps = 5;
>>>>>>> c628dec607758af1150d82915d5fc604da520b67
}
        
